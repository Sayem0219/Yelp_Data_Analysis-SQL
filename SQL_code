----Task 1: Yelp Dataset Profiling and Understanding

1. Profiling the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000

SELECT 
  COUNT(*)   
FROM 
  attribute;

ii. Business table = 10000

SELECT 
  COUNT(*)   
FROM 
  business;

iii. Category table = 10000

SELECT 
  COUNT(*)   
FROM 
  category;

iv. Checkin table = 10000

SELECT 
  COUNT(*)   
FROM 
  checkin;

v. elite_years table = 10000

SELECT 
  COUNT(*)   
FROM 
  elite_years;

vi. friend table = 10000

SELECT 
  COUNT(*)   
FROM 
  friend;

vii. hours table = 10000

SELECT 
  COUNT(*)   
FROM 
  hours;

viii. photo table = 10000

SELECT 
  COUNT(*)   
FROM 
  photo;

ix. review table = 10000

SELECT 
  COUNT(*)   
FROM 
  review;

x. tip table = 10000

SELECT 
  COUNT(*)   
FROM 
  tip;

xi. user table = 10000
	
SELECT 
  COUNT(*)   
FROM 
  user;

2. Finding the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000

SELECT 
  COUNT(DISTINCT id)
FROM 
  business;

ii. Hours = 1562 

SELECT 
  COUNT(DISTINCT business_id)
FROM 
  hours;

iii. Category = 2643 

SELECT 
  COUNT(DISTINCT business_id)
FROM 
  category;

iv. Attribute = 1115

SELECT 
  COUNT(DISTINCT business_id)
FROM 
  attribute;
v. Review = 10000 (Primary Key)

SELECT 
  COUNT(DISTINCT id)
FROM 
  review;

vi. Checkin = 493

SELECT 
  COUNT(DISTINCT business_id)
FROM 
  checkin;
vii. Photo = 10000 (Primary Key)

SELECT 
  COUNT(DISTINCT id)
FROM 
  photo;

viii. Tip = 3979 (Foreign Key)

SELECT 
  COUNT(DISTINCT user_id)
FROM 
  tip;

ix. User = 10000

SELECT 
  COUNT(DISTINCT id)
FROM 
  user;

x. Friend = 11

SELECT 
  COUNT(DISTINCT user_id)
FROM 
  friend;

xi. Elite_years = 2780 

SELECT 
  COUNT(DISTINCT user_id)
FROM 
  elite_years;

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No

	SQL code used to arrive at answer:
	
	SELECT *
	FROM
	   user
	WHERE
	   column_name IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:	3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg:	3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:	0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:	 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:	24.2995
		


5. Listing the cities with the most reviews in descending order:

SQL code used to arrive at answer:
	
	SELECT
    	   city,
    	   SUM(review_count) AS total_review
	FROM
    	   business
	GROUP BY
    	   city
	ORDER BY
    	   SUM(review_count) DESC
+-----------------+-----------------+
| city            | total_review    |
+-----------------+-----------------+
| Las Vegas       |           82854 |
| Phoenix         |           34503 |
| Toronto         |           24113 |
| Scottsdale      |           20614 |
| Charlotte       |           12523 |
| Henderson       |           10871 |
| Tempe           |           10504 |
| Pittsburgh      |            9798 |
| Montréal        |            9448 |
| Chandler        |            8112 |
| Mesa            |            6875 |
| Gilbert         |            6380 |
| Cleveland       |            5593 |
| Madison         |            5265 |
| Glendale        |            4406 |
| Mississauga     |            3814 |
| Edinburgh       |            2792 |
| Peoria          |            2624 |
| North Las Vegas |            2438 |
| Markham         |            2352 |
| Champaign       |            2029 |
| Stuttgart       |            1849 |
| Surprise        |            1520 |
| Lakewood        |            1465 |
| Goodyear        |            1155 |
+-----------------+-----------------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Finding the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
    stars,
    COUNT(stars) AS rating_count
FROM
    business
WHERE 
    city = "Avon"
GROUP BY
    stars	

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT
    stars,
    count(stars) AS rating_count
FROM
    business
WHERE 
    city = "Beachwood"
GROUP BY
    stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+
		
7. Find the top 3 users based on their total number of reviews:
		
SQL code used to arrive at answer:

SELECT
    name,
    review_count
FROM
    user
GROUP BY 
    name
ORDER BY
    review_count DESC
LIMIT 3	
		
Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
In general, a positive correlation exists between posting more reviews and gaining more fans. This correlation suggests that active engagement, expressed through reviews, contributes to building a larger fan base. When users consistently provide feedback, it signals a strong community connection and a potentially positive product or service experience. However, it's crucial to note that correlation does not imply causation. While increased reviews may attract more fans, the quality and sentiment of the reviews, as well as other influencing factors such as marketing efforts and product/service quality, also play significant roles. 
Therefore, while a higher review count is associated with a larger fan base, the nuanced dynamics of user engagement, satisfaction, and external influences should be considered for a comprehensive understanding.

In this case, there is no correlation between posting more reviews and fans

SELECT
    name,
    review_count,
    fans
FROM 
    user
ORDER BY
    fans DESC
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

9. Are there more reviews with the word "love" or with the word "hate" in them?

Answer: 'love'

SQL code used to arrive at answer:

SELECT
    COUNT(text) AS review_with_hate,
    (SELECT
        COUNT(text)
    FROM
        review
    WHERE 
        text LIKE '%love%') AS review_with_love
FROM
    review
WHERE 
    text LIKE '%hate%';
+------------------+------------------+
| review_with_hate | review_with_love |
+------------------+------------------+
|              232 |             1780 |
+------------------+------------------+

10. Finding the top 10 users with the most fans:

SQL code used to arrive at answer:
	
SELECT
    name,
    fans
FROM 
    user
ORDER BY
    fans DESC
LIMIT 10;

Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

----Task 2: Inferences and Analysis
Picking one city and category and grouping the businesses in that city or category by their overall star rating. Comparing the businesses with 2-3 stars to the businesses with 4-5 stars.
	
City: Las Vegas
Category: Food

i. Do the two groups you chose to analyze have a different distribution of hours?
Answer: Yes, they have a different distribution of hours. As a business with a star count, 4-5 seems open 9 hours both for weekday & weekend. On the other hand businesses with a star count, of 2-3 seem open 14 hours both for weekdays & weekends.

ii. Do the two groups you chose to analyze have a different number of reviews?
 Answer: Yes, they have.        
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Answer: No, as the sample data is too short to analyze.

SQL code used for analysis:

SELECT 
    name,
    address,
    neighborhood,
    city,
    category,
    stars,
    review_count,
    hours
FROM 
    business b
join category c on b.id = c.business_id
join hours h on b.id = h.business_id 
WHERE 
    category = "Food" AND 
    city = "Las Vegas"
+-----------------------------+-----------------------------+--------------+-----------+----------+-------+--------------+-----------------------+
| name                        | address                     | neighborhood | city      | category | stars | review_count | hours                 |
+-----------------------------+-----------------------------+--------------+-----------+----------+-------+--------------+-----------------------+
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Monday|10:00-19:00    |
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Tuesday|10:00-19:00   |
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Friday|10:00-19:00    |
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Wednesday|10:00-19:00 |
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Thursday|10:00-19:00  |
| Sweet Ruby Jane Confections | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | Food     |   4.0 |           30 | Saturday|10:00-19:00  |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Monday|8:00-22:00     |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Tuesday|8:00-22:00    |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Friday|8:00-22:00     |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Wednesday|8:00-22:00  |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Thursday|8:00-22:00   |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Sunday|8:00-22:00     |
| Walgreens                   | 3808 E Tropicana Ave        | Eastside     | Las Vegas | Food     |   2.5 |            6 | Saturday|8:00-22:00   |
+-----------------------------+-----------------------------+--------------+-----------+----------+-------+--------------+-----------------------+

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: average_stars is higher by 0.16  which are stand open
                
ii. Difference 2: average_review_count is higher by 8.56  which are stand open
                  
SQL code used for analysis:

SELECT
    is_open,
    MIN(stars),
    MAX(stars),
    ROUND(AVG(stars), 2),
    MIN(review_count), 
    MAX(review_count), 
    ROUND(AVG(review_count), 2)
FROM 
    business
GROUP BY 
    is_open
+---------+------------+------------+----------------------+-------------------+-------------------+----------------------------+
| is_open | MIN(stars) | MAX(stars) | ROUND(AVG(stars), 2) | MIN(review_count) | MAX(review_count) | ROUND(AVG(review_count),2) |
+---------+------------+------------+----------------------+-------------------+-------------------+----------------------------+
|       0 |        1.0 |        5.0 |                 3.52 |                 3 |               700 |                       23.2 |
|       1 |        1.0 |        5.0 |                 3.68 |                 3 |              3873 |                      31.76 |
+---------+------------+------------+----------------------+-------------------+-------------------+----------------------------+

3. Preparing dataset for own analysis.

i. Indicate the type of analysis you chose to do:
    Is there any relationship between achieving stars, reviews, and the total number of check-ins
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    In general, we could make an assumption or hypothesis about the relationship between the amount of check-ins and review gain. My hypothesis is more check-ins help get more stars or reviews. That's why need some data which are in the business & check-in table.                      
                  
iii. Output of your finished dataset:

+-------------------------------------------+-------+--------------+---------------+
| name                                      | stars | total_review | total_checkin |
+-------------------------------------------+-------+--------------+---------------+
| Cracker Barrel Old Country Store          |   3.5 |         1782 |           161 |
| Courtyard Cleveland Willoughby            |   3.0 |          660 |            95 |
| LongHorn Steakhouse                       |   3.5 |          882 |            95 |
| John Christ Winery                        |   3.0 |          864 |            64 |
| Chagrin Valley Little Theatre             |   4.5 |          116 |            54 |
| Rite Aid                                  |   2.0 |          204 |            46 |
| Highland Square Tavern                    |   2.5 |           72 |            38 |
| Panda Chinese Restaurant                  |   3.5 |          304 |            31 |
| Atlas Cinemas                             |   3.0 |          184 |            29 |
| Pizza Cutter                              |   4.0 |          198 |            28 |
| Spudnut Shop Donuts                       |   4.5 |          420 |            26 |
| CVS Pharmacy                              |   3.0 |          114 |            25 |
| Chapman's Food Mart                       |   4.0 |           95 |            24 |
| Davitino's Restaurant                     |   3.0 |          304 |            21 |
| Stella's Pizza & Italian Restaurant       |   2.0 |          192 |            15 |
| Red Wagon Farm                            |   3.5 |          143 |            14 |
| Manakiki Golf Course-Cleveland Metroparks |   3.5 |           65 |            13 |
| Dairy Queen                               |   4.5 |           33 |            11 |
| Berkshire Hills Golf Course               |   3.0 |           56 |            10 |
| Brownie's Market                          |   4.0 |           32 |             9 |
| Days Inn Willoughby/Cleveland             |   1.0 |           84 |             7 |
| The Inn of Chagrin Falls                  |   4.0 |           18 |             6 |
| Galleria Gowns                            |   4.5 |           64 |             5 |
| Wah Sun                                   |   3.5 |           27 |             4 |
| Burger King                               |   1.0 |            8 |             3 |
+-------------------------------------------+-------+--------------+---------------+
(Output limit exceeded, 25 of 29 total rows shown)
              
iv. Provide the SQL code you used to create your final dataset:

SELECT
    name,
    stars,
    SUM(review_count) AS total_review,
    SUM(count) AS total_checkin
FROM
    business b
join checkin c on b.id = c.business_id
GROUP BY
    name
ORDER BY 
    total_checkin DESC


